// Copyright (C) 2005-2010 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "card-generated-list-schema.hxx"

namespace Smartmatic
{
  namespace SAES
  {
    namespace Voting
    {
      namespace Status
      {
        // CardDataList
        // 

        const CardDataList::CardDataGeneratedSequence& CardDataList::
        getCardDataGenerated () const
        {
          return this->CardDataGenerated_;
        }

        CardDataList::CardDataGeneratedSequence& CardDataList::
        getCardDataGenerated ()
        {
          return this->CardDataGenerated_;
        }

        void CardDataList::
        setCardDataGenerated (const CardDataGeneratedSequence& s)
        {
          this->CardDataGenerated_ = s;
        }


        // CardDataGenerated
        // 

        const CardDataGenerated::CardDataType& CardDataGenerated::
        getCardData () const
        {
          return this->CardData_.get ();
        }

        CardDataGenerated::CardDataType& CardDataGenerated::
        getCardData ()
        {
          return this->CardData_.get ();
        }

        void CardDataGenerated::
        setCardData (const CardDataType& x)
        {
          this->CardData_.set (x);
        }

        void CardDataGenerated::
        setCardData (::std::auto_ptr< CardDataType > x)
        {
          this->CardData_.set (x);
        }
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

namespace Smartmatic
{
  namespace SAES
  {
    namespace Voting
    {
      namespace Status
      {
        // CardDataList
        //

        CardDataList::
        CardDataList ()
        : ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Type (),
          CardDataGenerated_ (::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags (), this)
        {
        }

        CardDataList::
        CardDataList (const CardDataList& x,
                      ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags f,
                      ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Container* c)
        : ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Type (x, f, c),
          CardDataGenerated_ (x.CardDataGenerated_, f, this)
        {
        }

        CardDataList::
        CardDataList (const ::xercesc::DOMElement& e,
                      ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags f,
                      ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Container* c)
        : ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Type (e, f | ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags::base, c),
          CardDataGenerated_ (f, this)
        {
          if ((f & ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags::base) == 0)
          {
            ::xsd::cxx::xml::dom::parser< char > p (e, true, false);
            this->parse (p, f);
          }
        }

        void CardDataList::
        parse (::xsd::cxx::xml::dom::parser< char >& p,
               ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags f)
        {
          for (; p.more_elements (); p.next_element ())
          {
            const ::xercesc::DOMElement& i (p.cur_element ());
            const ::xsd::cxx::xml::qualified_name< char > n (
              ::xsd::cxx::xml::dom::name< char > (i));

            // CardDataGenerated
            //
            if (n.name () == "CardDataGenerated" && n.namespace_ () == "http://www.smartmatic.com/Saes/Voting/Status")
            {
              ::std::auto_ptr< CardDataGeneratedType > r (
                CardDataGeneratedTraits::create (i, f, this));

              this->CardDataGenerated_.push_back (r);
              continue;
            }

            break;
          }
        }

        CardDataList* CardDataList::
        _clone (::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags f,
                ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Container* c) const
        {
          return new class CardDataList (*this, f, c);
        }

        CardDataList::
        ~CardDataList ()
        {
        }

        bool
        operator== (const CardDataList& x, const CardDataList& y)
        {
          if (!(x.getCardDataGenerated () == y.getCardDataGenerated ()))
            return false;

          return true;
        }

        bool
        operator!= (const CardDataList& x, const CardDataList& y)
        {
          return !(x == y);
        }

        // CardDataGenerated
        //

        CardDataGenerated::
        CardDataGenerated ()
        : ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Type (),
          CardData_ (::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags (), this)
        {
        }

        CardDataGenerated::
        CardDataGenerated (const CardDataType& CardData)
        : ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Type (),
          CardData_ (CardData, ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags (), this)
        {
        }

        CardDataGenerated::
        CardDataGenerated (const CardDataGenerated& x,
                           ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags f,
                           ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Container* c)
        : ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Type (x, f, c),
          CardData_ (x.CardData_, f, this)
        {
        }

        CardDataGenerated::
        CardDataGenerated (const ::xercesc::DOMElement& e,
                           ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags f,
                           ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Container* c)
        : ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Type (e, f | ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags::base, c),
          CardData_ (f, this)
        {
          if ((f & ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags::base) == 0)
          {
            ::xsd::cxx::xml::dom::parser< char > p (e, true, false);
            this->parse (p, f);
          }
        }

        void CardDataGenerated::
        parse (::xsd::cxx::xml::dom::parser< char >& p,
               ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags f)
        {
          for (; p.more_elements (); p.next_element ())
          {
            const ::xercesc::DOMElement& i (p.cur_element ());
            const ::xsd::cxx::xml::qualified_name< char > n (
              ::xsd::cxx::xml::dom::name< char > (i));

            // CardData
            //
            if (n.name () == "CardData" && n.namespace_ () == "http://www.smartmatic.com/Saes/Voting/Status")
            {
              ::std::auto_ptr< CardDataType > r (
                CardDataTraits::create (i, f, this));

              if (!CardData_.present ())
              {
                this->CardData_.set (r);
                continue;
              }
            }

            break;
          }

          if (!CardData_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "CardData",
              "http://www.smartmatic.com/Saes/Voting/Status");
          }
        }

        CardDataGenerated* CardDataGenerated::
        _clone (::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags f,
                ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Container* c) const
        {
          return new class CardDataGenerated (*this, f, c);
        }

        CardDataGenerated::
        ~CardDataGenerated ()
        {
        }

        bool
        operator== (const CardDataGenerated& x, const CardDataGenerated& y)
        {
          if (!(x.getCardData () == y.getCardData ()))
            return false;

          return true;
        }

        bool
        operator!= (const CardDataGenerated& x, const CardDataGenerated& y)
        {
          return !(x == y);
        }
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace Smartmatic
{
  namespace SAES
  {
    namespace Voting
    {
      namespace Status
      {
        ::std::auto_ptr< ::Smartmatic::SAES::Voting::Status::CardDataList >
        parseCardDataListGenerated (const ::std::string& u,
                                    ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags f,
                                    const ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Properties& p)
        {
          ::xsd::cxx::xml::auto_initializer i (
            (f & ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags::dont_initialize) == 0,
            (f & ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags::keep_dom) == 0);

          ::xsd::cxx::tree::error_handler< char > h;

          ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::dom::auto_ptr< ::xercesc::DOMDocument > d (
            ::xsd::cxx::xml::dom::parse< char > (
              u, h, p, f));

          h.throw_if_failed< ::xsd::cxx::tree::parsing< char > > ();

          ::std::auto_ptr< ::Smartmatic::SAES::Voting::Status::CardDataList > r (
            ::Smartmatic::SAES::Voting::Status::parseCardDataListGenerated (
              d, f | ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags::own_dom, p));

          return r;
        }

        ::std::auto_ptr< ::Smartmatic::SAES::Voting::Status::CardDataList >
        parseCardDataListGenerated (const ::std::string& u,
                                    ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::ErrorHandler& h,
                                    ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags f,
                                    const ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Properties& p)
        {
          ::xsd::cxx::xml::auto_initializer i (
            (f & ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags::dont_initialize) == 0,
            (f & ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags::keep_dom) == 0);

          ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::dom::auto_ptr< ::xercesc::DOMDocument > d (
            ::xsd::cxx::xml::dom::parse< char > (
              u, h, p, f));

          if (!d.get ())
            throw ::xsd::cxx::tree::parsing< char > ();

          ::std::auto_ptr< ::Smartmatic::SAES::Voting::Status::CardDataList > r (
            ::Smartmatic::SAES::Voting::Status::parseCardDataListGenerated (
              d, f | ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags::own_dom, p));

          return r;
        }

        ::std::auto_ptr< ::Smartmatic::SAES::Voting::Status::CardDataList >
        parseCardDataListGenerated (const ::std::string& u,
                                    ::xercesc::DOMErrorHandler& h,
                                    ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags f,
                                    const ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Properties& p)
        {
          ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::dom::auto_ptr< ::xercesc::DOMDocument > d (
            ::xsd::cxx::xml::dom::parse< char > (
              u, h, p, f));

          if (!d.get ())
            throw ::xsd::cxx::tree::parsing< char > ();

          ::std::auto_ptr< ::Smartmatic::SAES::Voting::Status::CardDataList > r (
            ::Smartmatic::SAES::Voting::Status::parseCardDataListGenerated (
              d, f | ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags::own_dom, p));

          return r;
        }

        ::std::auto_ptr< ::Smartmatic::SAES::Voting::Status::CardDataList >
        parseCardDataListGenerated (::std::istream& is,
                                    ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags f,
                                    const ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Properties& p)
        {
          ::xsd::cxx::xml::auto_initializer i (
            (f & ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags::dont_initialize) == 0,
            (f & ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags::keep_dom) == 0);

          ::xsd::cxx::xml::sax::std_input_source isrc (is);
          return ::Smartmatic::SAES::Voting::Status::parseCardDataListGenerated (isrc, f, p);
        }

        ::std::auto_ptr< ::Smartmatic::SAES::Voting::Status::CardDataList >
        parseCardDataListGenerated (::std::istream& is,
                                    ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::ErrorHandler& h,
                                    ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags f,
                                    const ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Properties& p)
        {
          ::xsd::cxx::xml::auto_initializer i (
            (f & ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags::dont_initialize) == 0,
            (f & ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags::keep_dom) == 0);

          ::xsd::cxx::xml::sax::std_input_source isrc (is);
          return ::Smartmatic::SAES::Voting::Status::parseCardDataListGenerated (isrc, h, f, p);
        }

        ::std::auto_ptr< ::Smartmatic::SAES::Voting::Status::CardDataList >
        parseCardDataListGenerated (::std::istream& is,
                                    ::xercesc::DOMErrorHandler& h,
                                    ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags f,
                                    const ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Properties& p)
        {
          ::xsd::cxx::xml::sax::std_input_source isrc (is);
          return ::Smartmatic::SAES::Voting::Status::parseCardDataListGenerated (isrc, h, f, p);
        }

        ::std::auto_ptr< ::Smartmatic::SAES::Voting::Status::CardDataList >
        parseCardDataListGenerated (::std::istream& is,
                                    const ::std::string& sid,
                                    ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags f,
                                    const ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Properties& p)
        {
          ::xsd::cxx::xml::auto_initializer i (
            (f & ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags::dont_initialize) == 0,
            (f & ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags::keep_dom) == 0);

          ::xsd::cxx::xml::sax::std_input_source isrc (is, sid);
          return ::Smartmatic::SAES::Voting::Status::parseCardDataListGenerated (isrc, f, p);
        }

        ::std::auto_ptr< ::Smartmatic::SAES::Voting::Status::CardDataList >
        parseCardDataListGenerated (::std::istream& is,
                                    const ::std::string& sid,
                                    ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::ErrorHandler& h,
                                    ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags f,
                                    const ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Properties& p)
        {
          ::xsd::cxx::xml::auto_initializer i (
            (f & ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags::dont_initialize) == 0,
            (f & ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags::keep_dom) == 0);

          ::xsd::cxx::xml::sax::std_input_source isrc (is, sid);
          return ::Smartmatic::SAES::Voting::Status::parseCardDataListGenerated (isrc, h, f, p);
        }

        ::std::auto_ptr< ::Smartmatic::SAES::Voting::Status::CardDataList >
        parseCardDataListGenerated (::std::istream& is,
                                    const ::std::string& sid,
                                    ::xercesc::DOMErrorHandler& h,
                                    ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags f,
                                    const ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Properties& p)
        {
          ::xsd::cxx::xml::sax::std_input_source isrc (is, sid);
          return ::Smartmatic::SAES::Voting::Status::parseCardDataListGenerated (isrc, h, f, p);
        }

        ::std::auto_ptr< ::Smartmatic::SAES::Voting::Status::CardDataList >
        parseCardDataListGenerated (::xercesc::InputSource& i,
                                    ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags f,
                                    const ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Properties& p)
        {
          ::xsd::cxx::tree::error_handler< char > h;

          ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::dom::auto_ptr< ::xercesc::DOMDocument > d (
            ::xsd::cxx::xml::dom::parse< char > (
              i, h, p, f));

          h.throw_if_failed< ::xsd::cxx::tree::parsing< char > > ();

          ::std::auto_ptr< ::Smartmatic::SAES::Voting::Status::CardDataList > r (
            ::Smartmatic::SAES::Voting::Status::parseCardDataListGenerated (
              d, f | ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags::own_dom, p));

          return r;
        }

        ::std::auto_ptr< ::Smartmatic::SAES::Voting::Status::CardDataList >
        parseCardDataListGenerated (::xercesc::InputSource& i,
                                    ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::ErrorHandler& h,
                                    ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags f,
                                    const ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Properties& p)
        {
          ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::dom::auto_ptr< ::xercesc::DOMDocument > d (
            ::xsd::cxx::xml::dom::parse< char > (
              i, h, p, f));

          if (!d.get ())
            throw ::xsd::cxx::tree::parsing< char > ();

          ::std::auto_ptr< ::Smartmatic::SAES::Voting::Status::CardDataList > r (
            ::Smartmatic::SAES::Voting::Status::parseCardDataListGenerated (
              d, f | ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags::own_dom, p));

          return r;
        }

        ::std::auto_ptr< ::Smartmatic::SAES::Voting::Status::CardDataList >
        parseCardDataListGenerated (::xercesc::InputSource& i,
                                    ::xercesc::DOMErrorHandler& h,
                                    ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags f,
                                    const ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Properties& p)
        {
          ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::dom::auto_ptr< ::xercesc::DOMDocument > d (
            ::xsd::cxx::xml::dom::parse< char > (
              i, h, p, f));

          if (!d.get ())
            throw ::xsd::cxx::tree::parsing< char > ();

          ::std::auto_ptr< ::Smartmatic::SAES::Voting::Status::CardDataList > r (
            ::Smartmatic::SAES::Voting::Status::parseCardDataListGenerated (
              d, f | ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags::own_dom, p));

          return r;
        }

        ::std::auto_ptr< ::Smartmatic::SAES::Voting::Status::CardDataList >
        parseCardDataListGenerated (const ::xercesc::DOMDocument& d,
                                    ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags f,
                                    const ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Properties& p)
        {
          if (f & ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags::keep_dom)
          {
            ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::dom::auto_ptr< ::xercesc::DOMDocument > c (
              static_cast< ::xercesc::DOMDocument* > (d.cloneNode (true)));

            ::std::auto_ptr< ::Smartmatic::SAES::Voting::Status::CardDataList > r (
              ::Smartmatic::SAES::Voting::Status::parseCardDataListGenerated (
                c, f | ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags::own_dom, p));

            return r;
          }

          const ::xercesc::DOMElement& e (*d.getDocumentElement ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (e));

          if (n.name () == "CardDataListGenerated" &&
              n.namespace_ () == "http://www.smartmatic.com/Saes/Voting/Status")
          {
            ::std::auto_ptr< ::Smartmatic::SAES::Voting::Status::CardDataList > r (
              ::xsd::cxx::tree::traits< ::Smartmatic::SAES::Voting::Status::CardDataList, char >::create (
                e, f, 0));
            return r;
          }

          throw ::xsd::cxx::tree::unexpected_element < char > (
            n.name (),
            n.namespace_ (),
            "CardDataListGenerated",
            "http://www.smartmatic.com/Saes/Voting/Status");
        }

        ::std::auto_ptr< ::Smartmatic::SAES::Voting::Status::CardDataList >
        parseCardDataListGenerated (::Smartmatic::SAES::Voting::CardDataGeneratedTypes::dom::auto_ptr< ::xercesc::DOMDocument >& d,
                                    ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags f,
                                    const ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Properties&)
        {
          ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::dom::auto_ptr< ::xercesc::DOMDocument > c (
            ((f & ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags::keep_dom) &&
             !(f & ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags::own_dom))
            ? static_cast< ::xercesc::DOMDocument* > (d->cloneNode (true))
            : 0);

          ::xercesc::DOMDocument& doc (c.get () ? *c : *d);
          const ::xercesc::DOMElement& e (*doc.getDocumentElement ());

          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (e));

          if (f & ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags::keep_dom)
            doc.setUserData (::Smartmatic::SAES::Voting::CardDataGeneratedTypes::dom::treeNodeKey,
                             (c.get () ? &c : &d),
                             0);

          if (n.name () == "CardDataListGenerated" &&
              n.namespace_ () == "http://www.smartmatic.com/Saes/Voting/Status")
          {
            ::std::auto_ptr< ::Smartmatic::SAES::Voting::Status::CardDataList > r (
              ::xsd::cxx::tree::traits< ::Smartmatic::SAES::Voting::Status::CardDataList, char >::create (
                e, f, 0));
            return r;
          }

          throw ::xsd::cxx::tree::unexpected_element < char > (
            n.name (),
            n.namespace_ (),
            "CardDataListGenerated",
            "http://www.smartmatic.com/Saes/Voting/Status");
        }
      }
    }
  }
}

#include <ostream>
#include <xsd/cxx/tree/error-handler.hxx>
#include <xsd/cxx/xml/dom/serialization-source.hxx>

namespace Smartmatic
{
  namespace SAES
  {
    namespace Voting
    {
      namespace Status
      {
        void
        operator<< (::xercesc::DOMElement& e, const CardDataList& i)
        {
          e << static_cast< const ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Type& > (i);

          // CardDataGenerated
          //
          for (CardDataList::CardDataGeneratedConstIterator
               b (i.getCardDataGenerated ().begin ()), n (i.getCardDataGenerated ().end ());
               b != n; ++b)
          {
            ::xercesc::DOMElement& s (
              ::xsd::cxx::xml::dom::create_element (
                "CardDataGenerated",
                "http://www.smartmatic.com/Saes/Voting/Status",
                e));

            s << *b;
          }
        }

        void
        serializeCardDataListGenerated (::std::ostream& o,
                                        const ::Smartmatic::SAES::Voting::Status::CardDataList& s,
                                        const ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::NamespaceInfomap& m,
                                        const ::std::string& e,
                                        ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags f)
        {
          ::xsd::cxx::xml::auto_initializer i (
            (f & ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags::dont_initialize) == 0);

          ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::dom::auto_ptr< ::xercesc::DOMDocument > d (
            ::Smartmatic::SAES::Voting::Status::serializeCardDataListGenerated (s, m, f));

          ::xsd::cxx::tree::error_handler< char > h;

          ::xsd::cxx::xml::dom::ostream_format_target t (o);
          if (!::xsd::cxx::xml::dom::serialize (t, *d, e, h, f))
          {
            h.throw_if_failed< ::xsd::cxx::tree::serialization< char > > ();
          }
        }

        void
        serializeCardDataListGenerated (::std::ostream& o,
                                        const ::Smartmatic::SAES::Voting::Status::CardDataList& s,
                                        ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::ErrorHandler& h,
                                        const ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::NamespaceInfomap& m,
                                        const ::std::string& e,
                                        ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags f)
        {
          ::xsd::cxx::xml::auto_initializer i (
            (f & ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags::dont_initialize) == 0);

          ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::dom::auto_ptr< ::xercesc::DOMDocument > d (
            ::Smartmatic::SAES::Voting::Status::serializeCardDataListGenerated (s, m, f));
          ::xsd::cxx::xml::dom::ostream_format_target t (o);
          if (!::xsd::cxx::xml::dom::serialize (t, *d, e, h, f))
          {
            throw ::xsd::cxx::tree::serialization< char > ();
          }
        }

        void
        serializeCardDataListGenerated (::std::ostream& o,
                                        const ::Smartmatic::SAES::Voting::Status::CardDataList& s,
                                        ::xercesc::DOMErrorHandler& h,
                                        const ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::NamespaceInfomap& m,
                                        const ::std::string& e,
                                        ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags f)
        {
          ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::dom::auto_ptr< ::xercesc::DOMDocument > d (
            ::Smartmatic::SAES::Voting::Status::serializeCardDataListGenerated (s, m, f));
          ::xsd::cxx::xml::dom::ostream_format_target t (o);
          if (!::xsd::cxx::xml::dom::serialize (t, *d, e, h, f))
          {
            throw ::xsd::cxx::tree::serialization< char > ();
          }
        }

        void
        serializeCardDataListGenerated (::xercesc::XMLFormatTarget& t,
                                        const ::Smartmatic::SAES::Voting::Status::CardDataList& s,
                                        const ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::NamespaceInfomap& m,
                                        const ::std::string& e,
                                        ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags f)
        {
          ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::dom::auto_ptr< ::xercesc::DOMDocument > d (
            ::Smartmatic::SAES::Voting::Status::serializeCardDataListGenerated (s, m, f));

          ::xsd::cxx::tree::error_handler< char > h;

          if (!::xsd::cxx::xml::dom::serialize (t, *d, e, h, f))
          {
            h.throw_if_failed< ::xsd::cxx::tree::serialization< char > > ();
          }
        }

        void
        serializeCardDataListGenerated (::xercesc::XMLFormatTarget& t,
                                        const ::Smartmatic::SAES::Voting::Status::CardDataList& s,
                                        ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::ErrorHandler& h,
                                        const ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::NamespaceInfomap& m,
                                        const ::std::string& e,
                                        ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags f)
        {
          ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::dom::auto_ptr< ::xercesc::DOMDocument > d (
            ::Smartmatic::SAES::Voting::Status::serializeCardDataListGenerated (s, m, f));
          if (!::xsd::cxx::xml::dom::serialize (t, *d, e, h, f))
          {
            throw ::xsd::cxx::tree::serialization< char > ();
          }
        }

        void
        serializeCardDataListGenerated (::xercesc::XMLFormatTarget& t,
                                        const ::Smartmatic::SAES::Voting::Status::CardDataList& s,
                                        ::xercesc::DOMErrorHandler& h,
                                        const ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::NamespaceInfomap& m,
                                        const ::std::string& e,
                                        ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags f)
        {
          ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::dom::auto_ptr< ::xercesc::DOMDocument > d (
            ::Smartmatic::SAES::Voting::Status::serializeCardDataListGenerated (s, m, f));
          if (!::xsd::cxx::xml::dom::serialize (t, *d, e, h, f))
          {
            throw ::xsd::cxx::tree::serialization< char > ();
          }
        }

        void
        serializeCardDataListGenerated (::xercesc::DOMDocument& d,
                                        const ::Smartmatic::SAES::Voting::Status::CardDataList& s,
                                        ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags)
        {
          ::xercesc::DOMElement& e (*d.getDocumentElement ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (e));

          if (n.name () == "CardDataListGenerated" &&
              n.namespace_ () == "http://www.smartmatic.com/Saes/Voting/Status")
          {
            e << s;
          }
          else
          {
            throw ::xsd::cxx::tree::unexpected_element < char > (
              n.name (),
              n.namespace_ (),
              "CardDataListGenerated",
              "http://www.smartmatic.com/Saes/Voting/Status");
          }
        }

        ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::dom::auto_ptr< ::xercesc::DOMDocument >
        serializeCardDataListGenerated (const ::Smartmatic::SAES::Voting::Status::CardDataList& s,
                                        const ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::NamespaceInfomap& m,
                                        ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Flags f)
        {
          ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::dom::auto_ptr< ::xercesc::DOMDocument > d (
            ::xsd::cxx::xml::dom::serialize< char > (
              "CardDataListGenerated",
              "http://www.smartmatic.com/Saes/Voting/Status",
              m, f));

          ::Smartmatic::SAES::Voting::Status::serializeCardDataListGenerated (*d, s, f);
          return d;
        }

        void
        operator<< (::xercesc::DOMElement& e, const CardDataGenerated& i)
        {
          e << static_cast< const ::Smartmatic::SAES::Voting::CardDataGeneratedTypes::Type& > (i);

          // CardData
          //
          {
            ::xercesc::DOMElement& s (
              ::xsd::cxx::xml::dom::create_element (
                "CardData",
                "http://www.smartmatic.com/Saes/Voting/Status",
                e));

            s << i.getCardData ();
          }
        }
      }
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

